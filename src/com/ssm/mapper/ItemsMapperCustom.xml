<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ssm.mapper.ItemsMapperCustom" >
	
	<resultMap id="BaseResultMap" type="com.ssm.po.Items" >
	    <id column="id" property="id" jdbcType="INTEGER" />
	    <result column="name" property="name" jdbcType="VARCHAR" />
	    <result column="price" property="price" jdbcType="REAL" />
	    <result column="pic" property="pic" jdbcType="VARCHAR" />
	    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
	</resultMap>
	<resultMap id="ResultMapWithBLOBs" type="com.ssm.po.Items" extends="BaseResultMap" >
	    <result column="detail" property="detail" jdbcType="LONGVARCHAR" />
	</resultMap>
	
	
	<!-- 定义商品查询的sql片段，就是商品查询条件 -->
	<sql id="query_items_where">
		<!-- 使用动态sql，通过if判断，满足条件进行sql拼接 -->
		<!-- 商品查询条件通过ItemsQueryVo包装对象 中itemsCustom属性传递 -->
			<if test="itemsCustom!=null">
				<if test="itemsCustom.name!=null and itemsCustom.name!=''">
					items.name LIKE '%${itemsCustom.name}%'
				</if>
			</if>
	</sql>
	
	<sql id="Base_Column_List" >
	    id, name, price, pic, createtime
	</sql>
	<sql id="Blob_Column_List" >
	    detail
	</sql>
	<!-- 
		parameterType 传入包装对象（包装了查询条件）
		resultType 建议使用扩展对象
	 -->
  <select id="findItemsList" parameterType="com.ssm.po.ItemsQueryVo"
  	resultType="com.ssm.po.ItemsCustom">
		SELECT * FROM items
		<where>
			<include refid="query_items_where"></include>
		</where>
  </select>
  
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from items
    where id = #{id,jdbcType=INTEGER}
  </select>
</mapper>